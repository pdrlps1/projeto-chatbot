{
  "version": 3,
  "sources": ["../../../node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../node_modules/unenv/dist/runtime/node/console.mjs", "../../../node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../../../src/db.ts", "../../../src/playbooks.ts", "../../../src/prompt.ts", "../../../src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-AhLBBi/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-AhLBBi/middleware-loader.entry.ts"],
  "sourceRoot": "/home/pedro/Projetos/projeto-chatbot/.wrangler/tmp/dev-JS7h9U",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "export const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\tconst seconds = Math.trunc(now / 1e3);\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\tref() {}\n\tunref() {}\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\tmainModule = undefined;\n\tdomain = undefined;\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "export const NODE_VERSION = \"22.14.0\";\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nexport const { exit, platform, nextTick } = getBuiltinModule(\n  \"node:process\"\n);\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  hrtime: UnenvHrTime,\n  nextTick\n});\nexport const {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  finalization,\n  features,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  on,\n  off,\n  once,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n} = unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "export type Role = \"user\" | \"assistant\" | \"system\";\r\n\r\nexport async function getTenantBySlug(env: { DB: D1Database }, slug: string) {\r\n  const { results } = await env.DB.prepare(\r\n    \"SELECT id, slug, name FROM tenants WHERE slug=?1 LIMIT 1\"\r\n  )\r\n    .bind(slug)\r\n    .all();\r\n  return results?.[0] as { id: string; slug: string; name: string } | undefined;\r\n}\r\n\r\nexport async function getTenantById(env: { DB: D1Database }, id: string) {\r\n  const { results } = await env.DB.prepare(\r\n    \"SELECT id, slug, name FROM tenants WHERE id=?1 LIMIT 1\"\r\n  )\r\n    .bind(id)\r\n    .all();\r\n  return results?.[0] as { id: string; slug: string; name: string } | undefined;\r\n}\r\n\r\nexport async function createConversation(env: EnvLike, tenantId: string) {\r\n  const stmt = env.DB.prepare(\r\n    \"INSERT INTO conversations (tenant_id) VALUES (?1) RETURNING id, phase, status, created_at\"\r\n  ).bind(tenantId);\r\n  const { results } = await stmt.run();\r\n  return results?.[0] as {\r\n    id: string;\r\n    phase: number;\r\n    status: string;\r\n    created_at: string;\r\n  };\r\n}\r\n\r\nexport async function getConversation(env: EnvLike, id: string) {\r\n  const stmt = env.DB.prepare(\r\n    \"SELECT id, tenant_id, status, phase, nome, motivo, created_at FROM conversations WHERE id=?1\"\r\n  ).bind(id);\r\n  const { results } = await stmt.all();\r\n  return results?.[0] as any | undefined;\r\n}\r\n\r\nexport async function updateConversation(\r\n  env: EnvLike,\r\n  id: string,\r\n  patch: Partial<{\r\n    phase: number;\r\n    nome: string;\r\n    motivo: string;\r\n    status: string;\r\n  }>\r\n) {\r\n  const sets: string[] = [];\r\n  const binds: any[] = [];\r\n  let i = 1;\r\n\r\n  for (const [k, v] of Object.entries(patch)) {\r\n    sets.push(`${k}=?${i++}`);\r\n    binds.push(v);\r\n  }\r\n  binds.push(id);\r\n\r\n  const sql = `UPDATE conversations SET ${sets.join(\", \")} WHERE id=?${i}`;\r\n  await env.DB.prepare(sql)\r\n    .bind(...binds)\r\n    .run();\r\n}\r\n\r\nexport async function insertMessage(\r\n  env: EnvLike,\r\n  conversationId: string,\r\n  role: Role,\r\n  content: string\r\n) {\r\n  await env.DB.prepare(\r\n    \"INSERT INTO messages (conversation_id, role, content) VALUES (?1, ?2, ?3)\"\r\n  )\r\n    .bind(conversationId, role, content)\r\n    .run();\r\n}\r\n\r\nexport async function listMessages(\r\n  env: EnvLike,\r\n  conversationId: string,\r\n  limit = 12\r\n) {\r\n  const stmt = env.DB.prepare(\r\n    \"SELECT role, content FROM messages WHERE conversation_id=?1 ORDER BY created_at DESC LIMIT ?2\"\r\n  ).bind(conversationId, limit);\r\n  const { results } = await stmt.all();\r\n  // retorna em ordem cronol\u00F3gica\r\n  return (results ?? []).reverse() as { role: Role; content: string }[];\r\n}\r\n\r\ntype EnvLike = { DB: D1Database };\r\n", "// src/playbooks.ts\r\nexport type IntentName = \"agendar\" | \"preco\" | \"duvida_geral\";\r\nexport type TenantId = \"clinica_demo\" | \"imobiliaria_demo\";\r\n\r\nexport interface Playbook {\r\n  version: string;\r\n  language: \"pt-BR\";\r\n  domain: string;\r\n  persona: {\r\n    name: string;\r\n    tone: \"amigavel\" | \"profissional\" | \"neutro\";\r\n    emoji: \"moderado\" | \"nenhum\";\r\n  };\r\n  goals: string[];\r\n  required_fields: string[];           // campos que precisamos capturar\r\n  intents: { name: IntentName; utterances: string[] }[];\r\n  flows: Record<\r\n    string,\r\n    {\r\n      entry_intents?: IntentName[];\r\n      rag_required?: boolean;\r\n      policy?: string;\r\n      fallback?: string;\r\n      nodes?: {\r\n        id: string;\r\n        ask?: string;\r\n        type?: \"choice\" | \"text\" | \"summary\";\r\n        choices?: string[];\r\n        validate?: { enum?: string[]; whatsapp?: boolean };\r\n        capture?: string | string[];\r\n        next?: string | Record<string, string>;\r\n        complete?: boolean;\r\n      }[];\r\n    }\r\n  >;\r\n  handoff_rules: {\r\n    incerteza_resposta?: string;\r\n    palavras_gatilho?: string[];\r\n  };\r\n  privacy: { pii_masking: boolean; consent_required: boolean };\r\n}\r\n\r\nexport const PLAYBOOKS: Record<TenantId, Playbook> = {\r\n  clinica_demo: {\r\n    version: \"1.0.0\",\r\n    language: \"pt-BR\",\r\n    domain: \"clinica_dermatologica\",\r\n    persona: { name: \"Ana\", tone: \"amigavel\", emoji: \"moderado\" },\r\n    goals: [\"triagem\", \"agendamento\", \"qualifica\u00E7\u00E3o\"],\r\n    required_fields: [\"nome\", \"contato\", \"tipo_consulta\"],\r\n    intents: [\r\n      { name: \"agendar\", utterances: [\"marcar\", \"consulta\", \"hor\u00E1rio\", \"agendar\"] },\r\n      { name: \"preco\", utterances: [\"pre\u00E7o\", \"valor\", \"custa\"] },\r\n      { name: \"duvida_geral\", utterances: [\"duvida\", \"informa\u00E7\u00E3o\", \"atende\"] },\r\n    ],\r\n    flows: {\r\n      triagem_agendamento: {\r\n        entry_intents: [\"agendar\"],\r\n        nodes: [\r\n          {\r\n            id: \"saudacao\",\r\n            ask: \"Oi! Sou a Ana da Cl\u00EDnica Demo. Voc\u00EA quer agendar consulta, tirar d\u00FAvidas ou conhecer valores?\",\r\n            type: \"choice\",\r\n            choices: [\"Agendar\", \"D\u00FAvidas\", \"Valores\"],\r\n            next: { Agendar: \"tipo_consulta\", \"D\u00FAvidas\": \"faq\", Valores: \"politica_precos\" },\r\n          },\r\n          {\r\n            id: \"tipo_consulta\",\r\n            ask: \"Qual o tipo de consulta? (Dermatol\u00F3gica geral, Est\u00E9tica, Retorno)\",\r\n            validate: { enum: [\"Dermatol\u00F3gica geral\", \"Est\u00E9tica\", \"Retorno\"] },\r\n            capture: \"tipo_consulta\",\r\n            next: \"contato\",\r\n          },\r\n          {\r\n            id: \"contato\",\r\n            ask: \"Perfeito! Seu nome e um WhatsApp para confirmarmos?\",\r\n            validate: { whatsapp: true },\r\n            capture: [\"nome\", \"contato\"],\r\n            next: \"confirmacao\",\r\n          },\r\n          {\r\n            id: \"confirmacao\",\r\n            type: \"summary\",\r\n            complete: true,\r\n          },\r\n        ],\r\n      },\r\n      faq: { rag_required: true },\r\n      politica_precos: { policy: \"nao_divulgar_preco\", fallback: \"encaminhar_recepcao\" },\r\n    },\r\n    handoff_rules: {\r\n      incerteza_resposta: \"score < 0.65 => handoff\",\r\n      palavras_gatilho: [\"falar com humano\", \"atendente\", \"reclama\u00E7\u00E3o\"],\r\n    },\r\n    privacy: { pii_masking: true, consent_required: true },\r\n  },\r\n\r\n  imobiliaria_demo: {\r\n    version: \"1.0.0\",\r\n    language: \"pt-BR\",\r\n    domain: \"imobiliaria\",\r\n    persona: { name: \"Leo\", tone: \"profissional\", emoji: \"nenhum\" },\r\n    goals: [\"triagem\", \"encaminhar_corretor\"],\r\n    required_fields: [\"nome\", \"contato\", \"tipo_operacao\", \"bairro\"],\r\n    intents: [\r\n      { name: \"agendar\", utterances: [\"visita\", \"ver im\u00F3vel\", \"agendar visita\"] },\r\n      { name: \"preco\", utterances: [\"pre\u00E7o\", \"aluguel\", \"compra\", \"valor\"] },\r\n      { name: \"duvida_geral\", utterances: [\"im\u00F3vel\", \"casa\", \"apartamento\", \"bairro\"] },\r\n    ],\r\n    flows: {\r\n      triagem: {\r\n        entry_intents: [\"duvida_geral\", \"agendar\"],\r\n        nodes: [\r\n          {\r\n            id: \"saudacao\",\r\n            ask: \"Ol\u00E1! Sou o Leo da Imobili\u00E1ria Demo. Voc\u00EA procura aluguel ou compra?\",\r\n            type: \"choice\",\r\n            choices: [\"Aluguel\", \"Compra\"],\r\n            capture: \"tipo_operacao\",\r\n            next: \"bairro\",\r\n          },\r\n          {\r\n            id: \"bairro\",\r\n            ask: \"Qual bairro voc\u00EA prefere?\",\r\n            capture: \"bairro\",\r\n            next: \"contato\",\r\n          },\r\n          {\r\n            id: \"contato\",\r\n            ask: \"Seu nome e um WhatsApp para enviarmos op\u00E7\u00F5es?\",\r\n            validate: { whatsapp: true },\r\n            capture: [\"nome\", \"contato\"],\r\n            next: \"confirmacao\",\r\n          },\r\n          { id: \"confirmacao\", type: \"summary\", complete: true },\r\n        ],\r\n      },\r\n      politica_precos: { policy: \"n\u00E3o_fixar_pre\u00E7o_sem_cadastrar\", fallback: \"encaminhar_corretor\" },\r\n    },\r\n    handoff_rules: { incerteza_resposta: \"score < 0.6 => handoff\", palavras_gatilho: [] },\r\n    privacy: { pii_masking: true, consent_required: true },\r\n  },\r\n};\r\n", "// src/prompt.ts\r\nimport type { Playbook } from \"./playbooks\";\r\n\r\nexport function buildSystemPrompt(pb: Playbook) {\r\n  return [\r\n    `Voc\u00EA \u00E9 ${pb.persona.name}, assistente do dom\u00EDnio ${pb.domain}.`,\r\n    `Objetivos: ${pb.goals.join(\", \")}.`,\r\n    `TOM: ${pb.persona.tone}. Emojis: ${pb.persona.emoji}.`,\r\n    `SEMPRE:`,\r\n    `- Fa\u00E7a no m\u00E1ximo 1 pergunta por vez.`,\r\n    `- Confirme entendimento em 1 frase quando o usu\u00E1rio responder algo crucial.`,\r\n    `- Se a pergunta n\u00E3o estiver coberta pelo playbook, admita e ofere\u00E7a encaminhar para humano.`,\r\n    `- N\u00E3o invente pol\u00EDticas ou pre\u00E7os; se policy do fluxo exigir, direcione ao canal correto.`,\r\n    `- Responda em pt-BR.`,\r\n    ``,\r\n    `Playbook (resumo estruturado):`,\r\n    JSON.stringify(simplifyPlaybook(pb)),\r\n  ].join(\"\\n\");\r\n}\r\n\r\nfunction simplifyPlaybook(pb: Playbook) {\r\n  // Reduzir ru\u00EDdo para caber no contexto do modelo\r\n  const { version, domain, goals, required_fields, intents, flows, handoff_rules } = pb;\r\n  return { version, domain, goals, required_fields, intents, flows, handoff_rules };\r\n}\r\n\r\nexport function buildMessages(system: string, userText: string, history?: { role: \"user\" | \"assistant\"; content: string }[]) {\r\n  const msgs: { role: \"system\" | \"user\" | \"assistant\"; content: string }[] = [\r\n    { role: \"system\", content: system }\r\n  ];\r\n  if (Array.isArray(history)) {\r\n    msgs.push(...history);\r\n  }\r\n  msgs.push({ role: \"user\", content: userText });\r\n  return msgs;\r\n}\r\n", "// src/index.ts\r\n\r\nimport {\r\n  createConversation,\r\n  getConversation,\r\n  updateConversation,\r\n  insertMessage,\r\n  listMessages,\r\n  getTenantBySlug,\r\n  getTenantById,\r\n} from \"./db\";\r\nimport { PLAYBOOKS, type TenantId } from \"./playbooks\";\r\nimport { buildMessages, buildSystemPrompt } from \"./prompt\";\r\n\r\nexport interface Env {\r\n  AI: Ai; // binding do Workers AI\r\n  DB: D1Database;\r\n  MODEL?: string; // opcional: ex.: \"@cf/meta/llama-3.1-8b-instruct\"\r\n}\r\n\r\n// util: stream de linhas JSON no formato que seu front j\u00E1 espera\r\nfunction streamJsonLines(text: string): ReadableStream {\r\n  const encoder = new TextEncoder();\r\n  const words = text.split(/(\\s+)/); // mant\u00E9m espa\u00E7amento\r\n  let i = 0;\r\n\r\n  return new ReadableStream({\r\n    start(controller) {\r\n      function push() {\r\n        if (i >= words.length) {\r\n          controller.close();\r\n          return;\r\n        }\r\n        const chunk = JSON.stringify({ response: words[i++] }) + \"\\n\";\r\n        controller.enqueue(encoder.encode(chunk));\r\n        // pequeno delay para \u201Cefeito digita\u00E7\u00E3o\u201D\r\n        setTimeout(push, 10);\r\n      }\r\n      push();\r\n    },\r\n  });\r\n}\r\n\r\ntype ChatMsg = { role: \"user\" | \"assistant\"; content: string };\r\ntype Flow = {\r\n  phase?: 0 | 1 | 2 | 3 | undefined;\r\n  nome?: string;\r\n  motivo?: string;\r\n};\r\n\r\nexport default {\r\n  async fetch(req, env): Promise<Response> {\r\n    const url = new URL(req.url);\r\n\r\n    // lista perfis p/ preencher o <select>\r\n    if (url.pathname === \"/profiles\" && req.method === \"GET\") {\r\n      const items = Object.keys(PLAYBOOKS).map((id) => ({\r\n        id,\r\n        name: PLAYBOOKS[id as TenantId].domain,\r\n      }));\r\n      return Response.json({ profiles: items });\r\n    }\r\n\r\n    // POST /api/chat { conversationId, message }\r\n    if (url.pathname === \"/api/chat\" && req.method === \"POST\") {\r\n      try {\r\n        const body = (await req.json().catch(() => ({}))) as {\r\n          conversationId?: string;\r\n          message?: string;\r\n        };\r\n\r\n        const message = (body.message ?? \"\").trim();\r\n        if (!message)\r\n          return Response.json(\r\n            { error: 'campo \"message\" \u00E9 obrigat\u00F3rio' },\r\n            { status: 400 }\r\n          );\r\n\r\n        // compat: se n\u00E3o vier conversationId, cria uma sess\u00E3o default\r\n        let conversationId = body.conversationId;\r\n        let conv = conversationId\r\n          ? await getConversation(env, conversationId)\r\n          : undefined;\r\n\r\n        if (!conv) {\r\n          // cria sess\u00E3o default em clinica_demo\r\n          const created = await createConversation(env, \"t_clinica\"); // ou mapeie pelo PLAYBOOKS se preferir\r\n          conversationId = created.id;\r\n          conv = await getConversation(env, conversationId);\r\n          // sauda\u00E7\u00E3o j\u00E1 foi inserida na rota /api/session; aqui seguimos direto\r\n        }\r\n\r\n        // Salva mensagem do usu\u00E1rio\r\n        await insertMessage(env, conversationId!, \"user\", message);\r\n\r\n        // Deriva tenant a partir do conversations.tenant_id \u2192 mapeie para seu PLAYBOOKS\r\n        // Nesta sprint, vamos assumir:\r\n        // t_clinica -> \"clinica_demo\", t_imob -> \"imobiliaria_demo\"\r\n        const tenantMap: Record<string, TenantId> = {\r\n          t_clinica: \"clinica_demo\",\r\n          t_imob: \"imobiliaria_demo\",\r\n        };\r\n        // depois de obter 'conv'\r\n        const tenant = await getTenantById(env, conv.tenant_id);\r\n        const tenantSlug = (tenant?.slug ?? \"clinica_demo\") as TenantId;\r\n        const pb = PLAYBOOKS[tenantSlug];\r\n\r\n        // Mini-engine de fases no servidor\r\n        const phase = Number(conv.phase ?? 0);\r\n\r\n        if (phase === 0) {\r\n          await updateConversation(env, conversationId!, { phase: 1 });\r\n          const stream = streamJsonLines(\r\n            \"Ol\u00E1! Para come\u00E7ar, qual \u00E9 o seu nome?\"\r\n          );\r\n          await insertMessage(\r\n            env,\r\n            conversationId!,\r\n            \"assistant\",\r\n            \"Ol\u00E1! Para come\u00E7ar, qual \u00E9 o seu nome?\"\r\n          );\r\n          return new Response(stream, {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          });\r\n        }\r\n\r\n        if (phase === 1) {\r\n          // assume a \u00FAltima msg como nome\r\n          await updateConversation(env, conversationId!, {\r\n            phase: 2,\r\n            nome: message,\r\n          });\r\n          const reply = `Prazer, ${message}! Qual \u00E9 o motivo do seu contato?`;\r\n          await insertMessage(env, conversationId!, \"assistant\", reply);\r\n          return new Response(streamJsonLines(reply), {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          });\r\n        }\r\n\r\n        if (phase === 2) {\r\n          // agora coletamos motivo e pedimos acolhimento ao modelo\r\n          await updateConversation(env, conversationId!, {\r\n            phase: 3,\r\n            motivo: message,\r\n          });\r\n\r\n          const system = [\r\n            buildSystemPrompt(pb),\r\n            `NUNCA responda fora do dom\u00EDnio \"${pb.domain}\". Se fugir do escopo, ofere\u00E7a encaminhar para humano.`,\r\n            `Responda em pt-BR, breve, com no m\u00E1ximo uma pergunta por vez.`,\r\n          ].join(\"\\n\");\r\n\r\n          // hist\u00F3rico curto do DB\r\n          const history = await listMessages(env, conversationId!, 12);\r\n          const model = (env.MODEL ??\r\n            \"@cf/meta/llama-3.1-8b-instruct\") as keyof AiModels;\r\n\r\n          const userSummary = [\r\n            \"Gere uma sauda\u00E7\u00E3o de acolhimento e pr\u00F3ximos passos, mantendo o contexto do dom\u00EDnio.\",\r\n            `Nome: ${conv.nome ?? \"cliente\"}`,\r\n            `Motivo: ${message}`,\r\n          ].join(\"\\n\");\r\n\r\n          const result = await env.AI.run(model, {\r\n            messages: [\r\n              { role: \"system\", content: system },\r\n              ...history,\r\n              { role: \"user\", content: userSummary },\r\n            ],\r\n          });\r\n\r\n          const text =\r\n            (result as any)?.response ||\r\n            \"Obrigado! Vamos prosseguir com seu atendimento.\";\r\n          await insertMessage(env, conversationId!, \"assistant\", text);\r\n          return new Response(streamJsonLines(text), {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          });\r\n        }\r\n\r\n        // fase >= 3 \u2192 conversa livre no contexto\r\n        {\r\n          const system = buildSystemPrompt(pb);\r\n          const history = await listMessages(env, conversationId!, 12);\r\n          const model = (env.MODEL ??\r\n            \"@cf/meta/llama-3.1-8b-instruct\") as keyof AiModels;\r\n\r\n          const result = await env.AI.run(model, {\r\n            messages: [{ role: \"system\", content: system }, ...history],\r\n          });\r\n\r\n          const text = (result as any)?.response || \"Certo, como posso ajudar?\";\r\n          await insertMessage(env, conversationId!, \"assistant\", text);\r\n          return new Response(streamJsonLines(text), {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          });\r\n        }\r\n      } catch (e: any) {\r\n        return Response.json(\r\n          { error: e?.message || \"internal_error\" },\r\n          { status: 500 }\r\n        );\r\n      }\r\n    }\r\n\r\n    // POST /api/session { tenantId: <slug> }\r\n    if (url.pathname === \"/api/session\" && req.method === \"POST\") {\r\n      const body = (await req.json().catch(() => ({}))) as {\r\n        tenantId?: TenantId;\r\n      };\r\n      const tenantSlug = (body.tenantId ?? \"clinica_demo\") as TenantId;\r\n\r\n      // 1) resolve slug -> id no banco\r\n      const tenantRow = await getTenantBySlug(env, tenantSlug);\r\n      if (!tenantRow) {\r\n        return Response.json(\r\n          { error: `tenant n\u00E3o encontrado: ${tenantSlug}` },\r\n          { status: 400 }\r\n        );\r\n      }\r\n\r\n      // 2) cria conversa com o **id** real\r\n      const conv = await createConversation(env, tenantRow.id);\r\n\r\n      await insertMessage(\r\n        env,\r\n        conv.id,\r\n        \"assistant\",\r\n        \"Ol\u00E1! Para come\u00E7ar, qual \u00E9 o seu nome?\"\r\n      );\r\n\r\n      return Response.json({\r\n        conversationId: conv.id,\r\n        reply: \"Ol\u00E1! Para come\u00E7ar, qual \u00E9 o seu nome?\",\r\n        phase: 1,\r\n      });\r\n    }\r\n\r\n    // sirva seu index.html e chat.js como j\u00E1 est\u00E3o (se o template n\u00E3o fizer isso automaticamente)\r\n    if (url.pathname === \"/\" && req.method === \"GET\") {\r\n      // se o template j\u00E1 serve arquivos est\u00E1ticos, ignore este bloco\r\n      // voc\u00EA pode continuar usando o bundler do template\r\n    }\r\n\r\n    return new Response(\"Not found\", { status: 404 });\r\n  },\r\n} satisfies ExportedHandler<Env>;\r\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/home/pedro/Projetos/projeto-chatbot/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/home/pedro/Projetos/projeto-chatbot/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/home/pedro/Projetos/projeto-chatbot/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/home/pedro/Projetos/projeto-chatbot/src/index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/home/pedro/Projetos/projeto-chatbot/.wrangler/tmp/bundle-AhLBBi/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/home/pedro/Projetos/projeto-chatbot/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/home/pedro/Projetos/projeto-chatbot/.wrangler/tmp/bundle-AhLBBi/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/home/pedro/Projetos/projeto-chatbot/.wrangler/tmp/bundle-AhLBBi/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["PerformanceMark", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "hrtime", "dir", "env", "count", "cwd", "hrtime", "assert", "env", "version", "domain", "env", "env", "env", "error", "env", "env"]
}
